spring.application.name=article-finder

spring.devtools.add-properties=false
spring.config.import=optional:configserver:http://localhost:4040/
spring.profiles.active=dev


management.endpoints.web.exposure.include=*
spring.jackson.serialization.fail-on-empty-beans=false

#Significane of following properties
# Telling r4j to register all cb related health endpoints to actuators.[default is disabled]
resilience4j.circuitbreaker.configs.default.register-health-indicator=true
# Telling r4j to monitor min. of 5 request to this api to open/close by cb based on on my threshold.
resilience4j.circuitbreaker.instances.nyCircuitBreaker.minimum-number-of-calls=5
# Telling r4j to open the CB if 50% of requests are failing. 50% of min req.
resilience4j.circuitbreaker.instances.nyCircuitBreaker.failure-rate-threshold=50
# Telling r4j to how much time CB to wait to go on half open state.
resilience4j.circuitbreaker.instances.nyCircuitBreaker.wait-duration-in-open-state=30000
# Telling r4j to allow only 2 requested in half open state.
resilience4j.circuitbreaker.instances.nyCircuitBreaker.permitted-number-of-calls-in-half-open-state=2


# Telling r4j to monitor min. of 5 request to this api to open/close by cb based on on my threshold.
resilience4j.circuitbreaker.instances.tgCircuitBreaker.minimum-number-of-calls=3
# Telling r4j to open the CB if 50% of requests are failing. 50% of min req.
resilience4j.circuitbreaker.instances.tgCircuitBreaker.failure-rate-threshold=50
# Telling r4j to how much time CB to wait to go on half open state.
resilience4j.circuitbreaker.instances.tgCircuitBreaker.wait-duration-in-open-state=30000
# Telling r4j to allow only 2 requested in half open state.
resilience4j.circuitbreaker.instances.tgCircuitBreaker.permitted-number-of-calls-in-half-open-state=2